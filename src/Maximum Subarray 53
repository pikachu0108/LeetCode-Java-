class Solution {
    public int maxSubArray(int[] nums) {
        int maxi = Integer.MIN_VALUE;
        int sum = 0;
        for(int i = 0;i<nums.length;i++){
            sum += nums[i];
            if(sum>maxi){
                maxi = sum;
            }
            if(sum<0){
                sum = 0;
            }
        }
        return maxi;

        /* 
        int n = nums.length;               //Approach 2
        if (n == 0) {
            return 0;
        }
        int[] dp = new int[n];
        dp[0] = nums[0];

        for (int i = 1; i < n; i++) {
            dp[i] = Math.max(nums[i], Math.max(dp[i-1] + nums[i], nums[i-1] + nums[i]));

        }

        int max = Integer.MIN_VALUE;
        for(int i = 0; i < dp.length; i++) {
            if(dp[i] > max) {
                max = dp[i];
            }
        }
        return max;

    }
    public int maxSubArray2(int[] A) {
        int max = Integer.MIN_VALUE, sum = 0;
        for (int i = 0; i< A.length; i++) {
            if (sum < 0)
            sum = A[i];
            else
            sum += A[i];
            if (sum > max)
            max = sum;

        }
        return max;
        */
    }
}
        
